plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    aaptOptions {
        noCompress "tflite"
        noCompress 'lite'
    }
    namespace = "com.nevronus.poultrypal"
    // compileSdk = flutter.compileSdkVersion
    compileSdk = 35
//    ndkVersion = flutter.ndkVersion
    ndkVersion = "27.0.12077973"

    // compileOptions {
    //     sourceCompatibility = JavaVersion.VERSION_1_8
    //     targetCompatibility = JavaVersion.VERSION_1_8
    //     // coreLibraryDesugaringEnabled true
    //     // isCoreLibraryDesugaringEnabled = true
    // }
    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
//        jvmTarget = JavaVersion.VERSION_1_8
        jvmTarget = JavaVersion.VERSION_21

    }



    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.nevronus.poultrypal"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        // minSdk = flutter.minSdkVersion
        // targetSdk = flutter.targetSdkVersion
//        targetSdk = 33
        targetSdk = 33
        versionCode = flutter.versionCode
        versionName = flutter.versionName
// dexOptions {
//         javaMaxHeapSize "4g" // Optional: Increase heap size if needed
//     }
        multiDexEnabled true
    }

    signingConfigs {
        if (System.getenv("ANDROID_KEYSTORE_PATH")) {
            release {
                storeFile file(System.getenv("ANDROID_KEYSTORE_PATH"))
                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            }
        } else {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
dependencies {
  implementation "com.google.firebase:firebase-iid:21.1.0"
  coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}
